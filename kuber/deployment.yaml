apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-payment
  namespace: lanchonete
  labels:
    app: order-payment
    environment: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-payment
  template:
    metadata:
      labels:
        app: order-payment
    spec:
      serviceAccountName: order-payment-service-account
      volumes:
        - name: documentdb-cert-volume
          secret:
            secretName: documentdb-cert
            optional: false
        - name: certs-dir
          emptyDir: {}
      containers:
        - name: order-payment
          image: <ECR_REPOSITORY_URL>:latest
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: mongo-config
          volumeMounts:
            - name: documentdb-cert-volume
              mountPath: "/tmp/certs"
              readOnly: true
            - name: certs-dir
              mountPath: "/certs"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
          env:
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                configMapKeyRef:
                  name: mongo-config
                  key: MONGO_URI
            - name: SPRING_DATA_MONGODB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: mongo-config
                  key: MONGO_USERNAME
            - name: SPRING_DATA_MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_PASSWORD
          resources:
            limits:
              memory: "512Mi"
              cpu: "300m"
            requests:
              memory: "256Mi"
              cpu: "300m"
            command: ["/bin/sh", "-c"]
            args:
              - "cp /tmp/certs/global-bundle.pem /certs/global-bundle.pem &&
                 exec java -Djavax.net.ssl.trustStore=/opt/java/openjdk/lib/security/cacerts 
                 -Djavax.net.ssl.trustStorePassword=changeit 
                 -jar order-payment-app.jar"



